extends layout
block scripts
    script
        |  function statusChangeCallback(response) {
        |    console.log('statusChangeCallback');
        |    console.log(response);
        |    // The response object is returned with a status field that lets the
        |    // app know the current login status of the person.
        |    // Full docs on the response object can be found in the documentation
        |    // for FB.getLoginStatus().
        |    if (response.status === 'connected') {
        |      // Logged into your app and Facebook.
        |      testAPI();
        |    } else if (response.status === 'not_authorized') {
        |      // The person is logged into Facebook, but not your app.
        |      document.getElementById('status').innerHTML = 'Please log ' +
        |        'into this app.';
        |    } else {
        |      // The person is not logged into Facebook, so we're not sure if
        |      // they are logged into this app or not.
        |      document.getElementById('status').innerHTML = 'Please log ' +
        |        'into Facebook.';
        |    }
        |  }
        |  function checkLoginState() {
        |    FB.getLoginStatus(function(response) {
        |      statusChangeCallback(response);
        |    });
        |  }
        |  function testAPI() {
        |    console.log('Welcome!  Fetching your information.... ');
        |    FB.api('/me', function(response) {
        |      console.log('Successful login for: ' + response.name);
        |      document.getElementById('status').innerHTML =
        |        'Thanks for logging in, ' + response.name + '!';
        |    });
        |  }

block top menu
    li
        a(id="status")
    li(class="")
        a
            <fb:login-button max_rows="1" size="medium" show_faces="false" auto_logout_link="true" scope="public_profile,email" onlogin="checkLoginState();"></fb:login-button>
        
block content
    div(class="jumbotron")
        div(class="container")
            h2
                | Login
     div(class="")
        div(class="well")
            h2 
                | FB SDK Login
            p
                | 
            pre
                | FB.login(function(response) {
                |   if (response.authResponse) {
                |     console.log('Welcome!  Fetching your information.... ');
                |     FB.api('/me', function(response) {
                |       console.log('Good to see you, ' + response.name + '.');
                |     });
                |   } else {
                |     console.log('User cancelled login or did not fully authorize.');
                |   }
                | });
            h3
                | Auth response
            p
                | The response object that's provided to your callback contains a number of fields:
            pre
                |{
                |    status: 'connected',
                |    authResponse: {
                |        accessToken: '...',
                |        expiresIn:'...',
                |        signedRequest:'...',
                |        userID:'...'
                |    }
                |}
            h3
                | Permissions
            p
                | By default, calling FB.login() will attempt to authenticate the user with only the basic permissions.
                | If you want one or more additional permissions, call FB.login() with an option object, and set the scope parameter with a comma-separated list of the permissions you wish to request from the user.
            pre
                | FB.login(function(response) {
                |   // handle the response
                | }, {scope: 'email,user_likes'});
            p
                | By setting the return_scopes option to true in the option object when calling FB.login(), you will receive a list of the granted permissions in the 'grantedScopes' field on the authResponse object.
            pre
                | FB.login(function(response) {
                |   // handle the response
                | }, {
                |   scope: 'publish_actions', 
                |   return_scopes: true
                | });
     div(class="")
        div(class="well")
            h2 
                | Social Plugin
            p
                | Creating a login button is easy. Simply visit 
                a(target="_blank", href="https://developers.facebook.com/docs/plugins/login-button")
                    | https://developers.facebook.com/docs/plugins/login-button
                | and chose from the available settings. Then the method of integration (HTML5, XFBML, IFRAME)
            p
                | Here you can  see the markup for the XFBML login button
            pre
                |&lt;fb:login-button max_rows="1" size="medium" show_faces="false" auto_logout_link="true"&gt;&lt;/fb:login-button&gt;
     div(class="")
        div(class="well")
            h2 
                | Example
            p
                | Using example code from developers.facebook. and social plugin.
            pre
                |  function statusChangeCallback(response) {
                |    console.log('statusChangeCallback');
                |    console.log(response);
                |    // The response object is returned with a status field that lets the
                |    // app know the current login status of the person.
                |    // Full docs on the response object can be found in the documentation
                |    // for FB.getLoginStatus().
                |    if (response.status === 'connected') {
                |      // Logged into your app and Facebook.
                |      testAPI();
                |    } else if (response.status === 'not_authorized') {
                |      // The person is logged into Facebook, but not your app.
                |      document.getElementById('status').innerHTML = 'Please log ' +
                |        'into this app.';
                |    } else {
                |      // The person is not logged into Facebook, so we're not sure if
                |      // they are logged into this app or not.
                |      document.getElementById('status').innerHTML = 'Please log ' +
                |        'into Facebook.';
                |    }
                |  }

            pre
                |  function checkLoginState() {
                |    FB.getLoginStatus(function(response) {
                |      statusChangeCallback(response);
                |    });
                |  }

            pre
                |  function testAPI() {
                |    console.log('Welcome!  Fetching your information.... ');
                |    FB.api('/me', function(response) {
                |      console.log('Successful login for: ' + response.name);
                |      document.getElementById('status').innerHTML =
                |        'Thanks for logging in, ' + response.name + '!';
                |    });
                |  }

            pre
                |&lt;fb:login-button scope="public_profile,email" onlogin="checkLoginState();"&gt;
                |&lt;/fb:login-button&gt;
            
